pipeline goodsPipeline {
    goodsExtractor -> goodsInterpreter;

    goodsInterpreter
        -> goodsCSVInterpreter 
        -> goodsRowsDeleter
        -> transportedgoodsCellWriter
        -> quantityGoodsCellWriter
        -> goodsTableInterpreter
        -> convertUppercaseJanuar
        -> convertUppercaseFebruar
        -> goodsLoader;


    block goodsExtractor oftype HttpExtractor {
        url: "https://www-genesis.destatis.de/genesis/downloads/00/tables/46131-0014_00.csv";
    }

    block goodsInterpreter oftype TextFileInterpreter { encoding: "latin3";}

    
    block goodsCSVInterpreter oftype CSVInterpreter { delimiter: ";"; }

    block goodsRowsDeleter oftype RowDeleter {
        delete: [row 1, row 2, row 3, row 4, row 5, row 6, row 7, row 41337, row 41338, row 41339];
    }

    block transportedgoodsCellWriter oftype CellWriter {
        at: range A1:E1;
        write: ["year", "month", "goods_id", "goods_name", "goods_source"];
    }

    block quantityGoodsCellWriter oftype CellWriter {
        at: range AT1:AU1;
        write: ["abroad", "total"];
    }

    constraint regex1 oftype RegexConstraint {
        regex: /\b(Januar|Februar|MÃ¤rz|April|Mai|Juni|Juli|August|September|Oktober|November|Dezember)\b/;
    }

    constraint regex2 oftype RegexConstraint {
        regex: /^NST7-[0-9A-Z]{3}$/;
    }

    constraint rangeConst1 oftype RangeConstraint {
        lowerBound: 0;
        lowerBoundInclusive: true;
    }

    valuetype months oftype text {
        constraints: [regex1];
    }

    valuetype positiveInt oftype integer {
        constraints: [rangeConst1];
    }

    valuetype goodsId oftype text {
        constraints: [regex2];
    }

    block goodsTableInterpreter oftype TableInterpreter {
        header: true;
        columns: [
            "year" oftype positiveInt,
            "month" oftype months,
            "goods_id" oftype goodsId,
            "goods_name" oftype text,
            "goods_source" oftype text,
            "abroad" oftype positiveInt,
            "total" oftype positiveInt
        ];
    }

    transform convertUppercaseJanuar 
    {
        from inputName oftype text;
        to outputName oftype text;
        outputName: inputName replace /Januar/ with 'JANUAR' ;
    }
    block convertUppercaseJanuar oftype TableTransformer
    {
        inputColumns: ['month'];
        outputColumn: 'month';
        use: convertUppercaseJanuar;
    }
    transform convertUppercaseFebruar
    {
        from inputName oftype text;
        to outputName oftype text;
        outputName: inputName replace /Februar/ with 'FEBRUAR';
    }
    block convertUppercaseFebruar oftype TableTransformer
    {
        inputColumns: ['month'];
        outputColumn: 'month';
        use: convertUppercaseFebruar;
    }



    block goodsLoader oftype SQLiteLoader {
        table: "goods";
        file: "./goodsTransportedByTrain.sqlite";
    }
}